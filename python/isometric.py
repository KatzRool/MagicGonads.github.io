import turtle
turtle.ht()
turtle.penup()
turtle.speed(-1)
r = 10
x_con = 3**0.5#(1+5**0.5)/2 
y_con = 1#0.5
z_con = 2
z_col = '#CCCCCC'
y_col = '#202020'
x_col = '#707070'
def block(x=1,y=1,z=1):
    _x = turtle.xcor()
    _y = turtle.ycor()
    goto = lambda x_,y_,z_: turtle.setpos(x_con*(x_*x-y_*y)*r+_x,y_con*(x_*x+y_*y+z_*z*z_con)*r+_y)
    turtle.fillcolor(z_col)
    turtle.begin_fill()
    goto(0,0,1)
    goto(0,1,1)
    goto(1,1,1)
    goto(1,0,1)
    goto(0,0,1)
    turtle.end_fill()
    if x<=0:
        turtle.fillcolor(y_col)
        turtle.begin_fill()
        goto(0,1,1)
        goto(0,1,0)
        goto(0,0,0)
        goto(0,0,1)
        turtle.end_fill()
    turtle.fillcolor(x_col)
    turtle.begin_fill()
    goto(1,0,1)
    goto(1,0,0)
    goto(0,0,0)
    goto(0,0,1)
    turtle.end_fill()
    if x>0:
        turtle.fillcolor(y_col)
        turtle.begin_fill()
        goto(0,1,1)
        goto(0,1,0)
        goto(0,0,0)
        goto(0,0,1)
        turtle.end_fill()
    goto(0,0,0)
def move(x,y,z):
    turtle.setpos(turtle.xcor()+x_con*(x-y)*r,turtle.ycor()+y_con*(x+y+z*z_con)*r)
def goto(x,y,z):
    turtle.setpos(x_con*(x-y)*r,y_con*(x+y+z*z_con)*r)
turtle.ht()
turtle.penup()
turtle.speed(-1)
def cube():
    x = turtle.xcor()
    y = turtle.ycor()
    move(4,4,0)
    block(1,1,4)
    turtle.setpos(x,y)
    move(4,1,4)
    block(1,4,1)
    turtle.setpos(x,y)
    move(5,1,-1)
    block(1,4,1)
    turtle.setpos(x,y)
    move(0,4,0)
    block(4,1,1)
    turtle.setpos(x,y)
    move(0,4,4)
    block(4,1,1)
    turtle.setpos(x,y)
    move(0,4,0)
    block(1,1,5)
    turtle.setpos(x,y)
    move(-1,0,5)
    block(1,4,1)
    turtle.setpos(x,y)
    block(1,4,1)
    move(4,0,0)
    block(1,1,5)
    turtle.setpos(x,y)
    block(4,1,1)
    move(0,0,1)
    block(1,1,4)
    turtle.setpos(x,y)
    move(0,0,4)
    block(4,1,1)
    turtle.setpos(x,y)
    move(0,-1,10)
    block(-1,1,0)
    turtle.setpos(x,y)
    move(1,0,0)
    block(-1,0,2)
    turtle.setpos(x,y)
def impossible():
    x = turtle.xcor()
    y = turtle.ycor()
    move(4,4,0)
    block(1,1,4)
    turtle.setpos(x,y)
    move(4,1,4)
    block(1,4,1)
    turtle.setpos(x,y)
    move(5,1,-1)
    block(1,4,1)
    turtle.setpos(x,y)
    move(0,4,0)
    block(4,1,1)
    turtle.setpos(x,y)
    move(0,4,4)
    block(4,1,1)
    turtle.setpos(x,y)
    move(0,4,0)
    block(1,1,5)
    turtle.setpos(x,y)
    move(-1,0,5)
    block(1,4,1)
    turtle.setpos(x,y)
    block(1,4,1)
    move(4,0,0)
    block(1,1,5)
    turtle.setpos(x,y)
    block(4,1,1)
    move(0,0,1)
    block(1,1,4)
    turtle.setpos(x,y)
    move(0,0,4)
    block(4,1,1)
    turtle.setpos(x,y)
    move(0,-1,10)
    block(-1,1,0)
    turtle.setpos(x,y)
    move(1,0,0)
    block(-1,0,2)
    turtle.setpos(x,y)
    move(4,3,0)
    block(1,1,1)
    turtle.setpos(x,y)
    move(4,2,0)
    block(0,1,1)
    move(0,0,1)
    block(1,1,0)
    turtle.setpos(x,y)
    move(3,4,0)
    block(1,1,1)
    turtle.setpos(x,y)
    move(2,4,0)
    block(1,0,1)
    move(0,0,1)
    block(1,1,0)
    turtle.setpos(x,y)
    move(0,-1,10)
    block(-1,1,0)
    turtle.setpos(x,y)
    move(1,0,0)
    block(-1,0,2)
    turtle.setpos(x,y)
    move(0,0,6)
    block(1,1,-1)
    turtle.setpos(x,y)
def hexagon():
    x = turtle.xcor()
    y = turtle.ycor()
    move(4,0,4)
    block(1,4,1)
    turtle.setpos(x,y)
    move(0,4,4)
    block(4,1,1)
    turtle.setpos(x,y)
    move(0,4,0)
    block(1,1,5)
    turtle.setpos(x,y)
    move(-1,0,5)
    block(1,4,1)
    turtle.setpos(x,y)
    block(1,4,1)
    turtle.setpos(x,y)
    move(4,0,0)
    block(1,1,5)
    turtle.setpos(x,y)
    block(4,1,1)
    move(0,0,1)
    block(1,1,4)
    turtle.setpos(x,y)
    move(0,0,4)
    block(4,1,1)
    turtle.setpos(x,y)
    move(0,-1,10)
    block(-1,1,0)
    turtle.setpos(x,y)
    move(1,0,0)
    block(-1,0,2)
    turtle.setpos(x,y)
def triangle(side=0):
    x = turtle.xcor()
    y = turtle.ycor()
    block(4**side,4**(1-side),1)
    block(1,1,5)
    move(4*side,4*(1-side),0)
    block(4**(1-side),4**side,1)
    move(-3*side,-3*(1-side),0)
    block(4**side,4**(1-side),1)
    block(-1*side,-1*(1-side),3)
    turtle.setpos(x,y)
def star(core=0):
    move(0,0,-5)
    x = turtle.xcor()
    y = turtle.ycor()
    exec(['hexagon()','cube()','impossible()'][core])
    move(0,5,-6)
    triangle(1)
    turtle.setpos(x,y)
    move(5,0,-6)
    triangle(0)
    turtle.setpos(x,y)
    move(6,0,-1)
    triangle(1)
    turtle.setpos(x,y)
    move(5,0,5)
    triangle(0)
    turtle.setpos(x,y)
    move(0,5,5)
    triangle(1)
    turtle.setpos(x,y)
    move(0,6,-1)
    triangle(0)
    turtle.setpos(x,y)
    move(0,0,5)
def tessellate(func=(star,0),l=5,w=5,s=11,x=0,y=23,z=18):
    goto(x,y,z)
    for i in range(l):
        goto(x,y-s*i,z+s*(i-int(i/2)))
        for j in range(w+i%2):
            move(0,0,-s)
            exec(func[0].__name__+str(func[1:]))
def colour(c='red'):
    global z_col, x_col, y_col
    if type(c)!=str:
        turtle.bgcolor('white')
        z_col = '#CCCCCC'
        y_col = '#202020'
        x_col = '#707070'
    elif c == 'red':
        turtle.bgcolor('#201010')
        z_col = '#CC5050'
        x_col = '#702020'
        y_col = '#501010'
    elif c == 'blue':
        turtle.bgcolor('#101020')
        z_col = '#5050CC'
        x_col = '#202070'
        y_col = '#101050'
    elif c == 'green':
        turtle.bgcolor('#102010')
        z_col = '#50CC50'
        x_col = '#207020'
        y_col = '#105010'
